<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net462</TargetFrameworks>
    <Platforms>AnyCPU;x64</Platforms>
    <OutputType>Exe</OutputType>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Prefer32Bit>true</Prefer32Bit>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>

    <RootNamespace>HeapDump</RootNamespace>
    <AssemblyName>HeapDump</AssemblyName>
    <Description>HeapDump</Description>
    <Company>Microsoft</Company>
    <Copyright>Copyright © Microsoft 2011</Copyright>
  </PropertyGroup>

  <PropertyGroup>
    <!-- NuGet won't know to restore the x64 build unless we add it explicitly -->
    <RuntimeIdentifiers>win7-x64</RuntimeIdentifiers>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Platform)' == 'AnyCPU'">
    <!-- AnyCPU is our 32-bit build because it automatically makes the executable large address aware -->
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>

  <PropertyGroup>
    <HighEntropyVA>true</HighEntropyVA>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="PerfView.SupportFiles" Version="$(PerfViewSupportFilesVersion)" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup Condition="'$(MicrosoftDiagnosticsRuntimeVersion)' != 'local'">
    <PackageReference Include="Microsoft.Diagnostics.Runtime" Version="$(MicrosoftDiagnosticsRuntimeVersion)" />
  </ItemGroup>
  <ItemGroup Condition="'$(MicrosoftDiagnosticsRuntimeVersion)' == 'local'">
    <Reference Include="Microsoft.Diagnostics.Runtime">
      <HintPath>$(MicrosoftDiagnosticsRuntimePath)</HintPath>
    </Reference>
  </ItemGroup>

  <!-- Override the version of System.Text.Json that is transitively included to address security issues. -->
  <ItemGroup>
    <PackageReference Include="System.Text.Json" Version="$(SystemTextJsonVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FastSerialization\FastSerialization.csproj" />
    <ProjectReference Include="..\TraceEvent\TraceEvent.csproj" />
    <!-- *** SourceLink Support *** -->
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="$(MicrosoftSourceLinkGitHubVersion)" PrivateAssets="All"/>
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\MemoryGraph\graph.cs">
      <Link>MemoryGraph\graph.cs</Link>
    </Compile>
    <Compile Include="..\MemoryGraph\MemoryGraph.cs">
      <Link>MemoryGraph\MemoryGraph.cs</Link>
    </Compile>
    <Compile Include="..\Utilities\EnvironmentUtilities.cs">
      <Link>Utilities\EnvironmentUtilities.cs</Link>
    </Compile>
    <Compile Include="..\Utilities\StringUtilities.cs">
      <Link>Utilities\StringUtilities.cs</Link>
    </Compile>
    <Compile Include="..\HeapDumpCommon\DotNetHeapInfo.cs" />
    <Compile Include="..\HeapDumpCommon\GCHeapDumpNames.cs" />
    <Compile Include="..\PerfView\memory\ETWClrProfilerTraceEventParser.cs" />
    <Compile Include="..\PerfView\memory\JavaScriptDumpGraph.cs" />
    <Compile Include="..\PerfView\memory\JavaScriptHeapDumper.cs" />
    <Compile Include="..\PerfView\PerfViewLogger.cs" />
    <Compile Include="..\PerfView\Triggers.cs" />
    <Compile Include="..\Utilities\TeeTextWriter.cs" />
    <Compile Include="..\ETWHeapDump\DotNetHeapDumper.cs" />
    <Compile Include="..\ETWHeapDump\DotNetHeapDumpGraphReader.cs" />
    <Compile Include="..\Utilities\FileUtilities.cs" />
    <Compile Include="..\Utilities\DirectoryUtilities.cs" />
    <Compile Include="..\Utilities\XmlUtilities.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Include="app.config" />
  </ItemGroup>

  <!-- ******************* Signing Support *********************** -->
  <ItemGroup>
    <FilesToSign Include="$(TargetPath)">
        <Authenticode>Microsoft400</Authenticode>
    </FilesToSign>
    <PackageReference Include="MicroBuild.Core" Version="$(MicroBuildCoreVersion)" />
  </ItemGroup>

</Project>
