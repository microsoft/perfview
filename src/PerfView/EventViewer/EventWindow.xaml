<src:WindowBase x:Class="PerfView.EventWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:WPFToolKit="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:src="clr-namespace:PerfView"
        xmlns:controls="clr-namespace:Controls"
        Style="{DynamicResource CustomWindowStyle}"
        Title="Events Filtered by Type" WindowState="Maximized">
    <Window.Resources>
        <!-- Shared Styles -->
        <Style x:Key="RightAlign">
            <Setter Property="TextBlock.TextAlignment" Value="Right" />
        </Style>
        <Style x:Key="CenterAlign">
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
        </Style>
    </Window.Resources>
    <DockPanel Background="{DynamicResource BackgroundColour}">
        <DockPanel.CommandBindings>
            <CommandBinding Command="{x:Static src:EventWindow.UsersGuideCommand}" Executed="DoHyperlinkHelp"/>
            <CommandBinding Command="Help" Executed="DoHyperlinkHelp" />
            <CommandBinding Command="{x:Static src:EventWindow.UpdateCommand}" Executed="DoUpdate"/>
            <CommandBinding Command="{x:Static src:EventWindow.FindCommand}" Executed="DoFind"/>
            <CommandBinding Command="{x:Static src:EventWindow.FindNextCommand}" Executed="DoFindNext"/>
            <CommandBinding Command="{x:Static src:EventWindow.OpenCpuStacksCommand}" Executed="DoOpenCpuStacks"/>
            <CommandBinding Command="{x:Static src:EventWindow.OpenThreadStacksCommand}" Executed="DoOpenThreadStacks"/>
            <CommandBinding Command="{x:Static src:EventWindow.OpenAnyStacksCommand}" Executed="DoOpenAnyStacks"/>
            <CommandBinding Command="{x:Static src:EventWindow.OpenAnyStartStopStacksCommand}" Executed="DoOpenAnyStartStopStacks"/>
            <CommandBinding Command="{x:Static src:EventWindow.OpenAnyTaskTreeStacksCommand}" Executed="DoOpenAnyTaskTreeStacks"/>
            <CommandBinding Command="{x:Static src:EventWindow.SetProcessFilterCommand}" Executed="DoProcessFilter"/>
            <CommandBinding Command="{x:Static src:EventWindow.ShowEventCounterGraphCommand}" Executed="DoShowEventCounterGraph"/>
            <CommandBinding Command="{x:Static src:EventWindow.SetRangeFilterCommand}" Executed="DoRangeFilter"/>
            <CommandBinding Command="{x:Static src:EventWindow.NewWindowCommand}" Executed="DoNewWindow"/>
            <CommandBinding Command="{x:Static src:EventWindow.CancelCommand}" Executed="DoCancel"/>
            <CommandBinding Command="{x:Static src:EventWindow.SaveAsCsvCommand}" Executed="DoSaveAsCsv"/>
            <CommandBinding Command="{x:Static src:EventWindow.SaveAsXmlCommand}" Executed="DoSaveAsXml"/>
            <CommandBinding Command="{x:Static src:EventWindow.OpenInExcelCommand}" Executed="DoOpenInExcel"/>
            <CommandBinding Command="{x:Static src:EventWindow.CopyTimeRangeCommand}" Executed="DoCopyTimeRange" />
            <CommandBinding Command="{x:Static src:EventWindow.DumpEventCommand}" Executed="DoDumpEvent" />
            <CommandBinding Command="{x:Static src:EventWindow.HighlightInHistogramCommand}" Executed="DoHighlightInHistogram" />
        </DockPanel.CommandBindings>
        <DockPanel.ContextMenu>
            <ContextMenu>
                <MenuItem Command="{x:Static src:EventWindow.NewWindowCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.UpdateCommand}" />
                <Separator/>
                <MenuItem Command="{x:Static src:EventWindow.ShowEventCounterGraphCommand}" />
                <Separator/>
                <MenuItem Command="{x:Static src:EventWindow.SetProcessFilterCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.SetRangeFilterCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.CopyTimeRangeCommand}" />
                <Separator/>
                <MenuItem Command="{x:Static src:EventWindow.FindCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.FindNextCommand}" />
                <Separator/>
                <MenuItem Command="{x:Static src:EventWindow.OpenCpuStacksCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.OpenThreadStacksCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.OpenAnyStacksCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.OpenAnyStartStopStacksCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.OpenAnyTaskTreeStacksCommand}" />
                <Separator/>
                <MenuItem Command="{x:Static src:EventWindow.SaveAsCsvCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.SaveAsXmlCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.OpenInExcelCommand}" />
                <Separator/>
                <MenuItem Command="{x:Static src:EventWindow.DumpEventCommand}" />
                <MenuItem Command="{x:Static src:EventWindow.HighlightInHistogramCommand}" />

            </ContextMenu>
        </DockPanel.ContextMenu>
        <!-- The Menu bar -->
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Menu DockPanel.Dock="Top" Background="{DynamicResource ControlDefaultBackground}">
                <MenuItem Header="_File">
                    <MenuItem Header="_Parent Window" Click="DoOpenParent"/>
                    <MenuItem Header="_Close" Click="DoClose"/>
                </MenuItem>
                <MenuItem Header="_View">
                    <MenuItem Header="_Show Local Time" IsCheckable="True" IsChecked="False" Checked="DoUseLocalTime" Unchecked="DoUseOriginTime"/>
                </MenuItem>
                <MenuItem Header="_Help">
                        <MenuItem Header="_Help on Event Viewer" Command="Help" CommandParameter="EventViewerQuickStart" />
                    <MenuItem Header="_Users Guide" Command="{x:Static src:EventWindow.UsersGuideCommand}" CommandParameter="UsersGuide"/>
                </MenuItem>
            </Menu>
            <Rectangle Grid.Column="1" Grid.ColumnSpan="10" Fill="{DynamicResource ControlDefaultBackground}"/>
            <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="3,0">
                <Hyperlink Command="Help" CommandParameter="EventViewerQuickStart">Event View Help (F1)</Hyperlink>
            </TextBlock>
            <TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="3,0">
                <Hyperlink Command="Help" CommandParameter="EventViewerTroubleshooting">Troubleshooting</Hyperlink>
            </TextBlock>
            <TextBlock Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="3,0">
                <Hyperlink Command="Help" CommandParameter="EventViewerTips">Tips</Hyperlink>
            </TextBlock>
        </Grid>
        <Grid DockPanel.Dock="Top" Margin="0,1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <Button Margin="3,2,3,2" FontSize="9" Click="DoUpdate" ToolTip="Update main window using current filter parameters (F5).">Update</Button>
                <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="5,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="StartTextBox" KeyboardNavigation.IsTabStop="False">Start:</Hyperlink>
                </TextBlock>
                <controls:HistoryComboBox  x:Name="StartTextBox" Width="90" Enter="DoUpdate">
                    <controls:HistoryComboBox.ToolTip>
                        <TextBlock>Exclude any samples that happened before this time (MSec from start).\r\nCan paste ranges into this box.</TextBlock>
                    </controls:HistoryComboBox.ToolTip>
                </controls:HistoryComboBox>
                <TextBlock VerticalAlignment="Center" Margin="10,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="EndTextBox" KeyboardNavigation.IsTabStop="False">End:</Hyperlink>
                </TextBlock>
                <controls:HistoryComboBox x:Name="EndTextBox" Width="90" Enter="DoUpdate">
                    <controls:HistoryComboBox.ToolTip>
                        <TextBlock>Exclude any samples that happened after this time (MSec from start).</TextBlock>
                    </controls:HistoryComboBox.ToolTip>
                </controls:HistoryComboBox>
                <TextBlock VerticalAlignment="Center" Margin="10,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="MaxRetTextBox" KeyboardNavigation.IsTabStop="False">MaxRet:</Hyperlink>
                </TextBlock>
                <controls:HistoryComboBox x:Name="MaxRetTextBox" Width="80" Enter="DoUpdate">
                    <controls:HistoryComboBox.ToolTip>
                        <TextBlock>At most this number of records are returned (speeds things up).</TextBlock>
                    </controls:HistoryComboBox.ToolTip>
                </controls:HistoryComboBox>
            </StackPanel>
            <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="20,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="FindTextBox" KeyboardNavigation.IsTabStop="False">Find:</Hyperlink>
            </TextBlock>
            <controls:HistoryComboBox x:Name="FindTextBox" Grid.Column="2" MinWidth="100" Enter="DoFindEnter">
                <controls:HistoryComboBox.ToolTip>
                    <TextBlock>Find a name in the display below (Standard .NET Regular Explressions apply, case insensitive).</TextBlock>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
        </Grid>
        <Grid DockPanel.Dock="Top" Margin="0,1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="20,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="ProcessFilterTextBox" KeyboardNavigation.IsTabStop="False">Process Filter:</Hyperlink>
            </TextBlock>
            <controls:HistoryComboBox Grid.Column="1" Margin="0,3,0,3" x:Name="ProcessFilterTextBox" Enter="DoUpdate" >
                <controls:HistoryComboBox.ToolTip>
                    <TextBlock>A .NET Regular expression that must match the process name field.</TextBlock>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
            <TextBlock Grid.Column="2"  VerticalAlignment="Center" Margin="10,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="TextFilterTextBox" KeyboardNavigation.IsTabStop="False">Text Filter:</Hyperlink>
            </TextBlock>
            <controls:HistoryComboBox Grid.Column="3" Margin="0,3,0,3" x:Name="TextFilterTextBox" Enter="DoUpdate">
                <controls:HistoryComboBox.ToolTip>
                    <TextBlock>A .NET Regular expression that must match the data field.</TextBlock>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
            <TextBlock Grid.Column="4" VerticalAlignment="Center" Margin="10,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="ColumnsToDisplayTextBox" KeyboardNavigation.IsTabStop="False">Columns To Display:</Hyperlink>
            </TextBlock>
            <Button Grid.Column="5" Name="ListButton" Margin="3,3,3,3" Content="Cols" Click="DoColumnsToDisplayListClick"
                    ToolTip="Displays a list you can shift click and ctrl-click to select columns to display." />
            <Popup Name="ColumnsToDisplayPopup" StaysOpen="false" PopupAnimation="Fade" PlacementTarget="{Binding ElementName=ListButton}" Placement="Bottom" >
                <ListBox Name="ColumnsToDisplayListBox" SelectionMode="Extended" KeyDown="DoColumnsToDisplayListBoxKey" MouseDoubleClick="DoColumnsToDisplayListBoxDoubleClick" MaxHeight="300"/>
            </Popup>
            <controls:HistoryComboBox Grid.Column="6" Margin="0,3,0,3" x:Name="ColumnsToDisplayTextBox" Enter="DoUpdate">
                <controls:HistoryComboBox.ToolTip>
                    <TextBlock>A space separated list of column names to show in the 'data' field.</TextBlock>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
        </Grid>
        <src:StatusBar x:Name="StatusBar" DockPanel.Dock="Bottom"/>
        <!-- The Main window (left and rigth panes -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <DockPanel>
                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" TextAlignment="Center" VerticalAlignment="Center" Margin="10,2,20,0">
                        <Hyperlink Command="Help" CommandParameter="EventTypes">
                            <Bold>Event Types</Bold>
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock Grid.Column="1"  TextAlignment="Center" VerticalAlignment="Center" Margin="10,0,2,0">
                        <Hyperlink Command="Help" CommandParameter="EventTypesFilter">Filter:</Hyperlink>
                    </TextBlock>

                    <TextBox Name="EventTypeFilterTextBox" Grid.Column="2" TextChanged="DoEventTypeFilterTextBoxChanged"
                             ToolTip="Restrict the event types shown to those containing text typed here."/>
                </Grid>
                <ListBox Name="EventTypes" SelectionMode="Extended" KeyDown="DoEventTypesKey" MouseDoubleClick="DoUpdate"
                         ToolTip="Double click, ctrl-Click and shift-Click to select the events you wish to see."/>
            </DockPanel>
            <GridSplitter Grid.Column="0" Width="3" />
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"  TextAlignment="Center" VerticalAlignment="Center" Margin="10,0,2,0">
                        <Hyperlink Command="Help" CommandParameter="Histogram">Histogram:</Hyperlink>
                    </TextBlock>
                    <TextBox Grid.Column="1" Name="Histogram" Height="20" Margin="3,0,0,0"  Background="Transparent"
                             SelectionChanged="DoHistogramSelectionChanged"  Grid.Row="0" IsReadOnly="True"
                             FontFamily="Courier New" FontSize="10"
                             ToolTip="Shows how the frequency of the selected events vary over time."/>
                </Grid>
                <WPFToolKit:DataGrid Grid.Row="1" Name="Grid"
                    AutoGenerateColumns="False"
                    ToolTip="Click on Update button to update."
                    SelectionMode="Extended" SelectionUnit="CellOrRowHeader"
                    SelectedCellsChanged="SelectedCellsChanged"
                    AlternatingRowBackground="{DynamicResource AlternateRowBackground}" >
                    <WPFToolKit:DataGrid.Columns>
                        <WPFToolKit:DataGridTextColumn
                        x:Name="EventNameColumn"
                        Header="Event Name"
                        Binding="{Binding EventName}"
                        MinWidth="60"
                        IsReadOnly="True" />
                        <WPFToolKit:DataGridTextColumn
                        x:Name="LocalTimeStampColumn"
                        Header="TimeStamp (Current Machine)"
                        Binding="{Binding LocalTimeStamp, StringFormat=o}"
                        MinWidth="60"
                        IsReadOnly="True"
                        Visibility="Hidden"
                        ElementStyle="{StaticResource RightAlign}" />
                        <WPFToolKit:DataGridTextColumn
                        x:Name="OriginTimeStampColumn"
                        Header="TimeStamp (Trace Local)"
                        Binding="{Binding OriginTimeStamp, StringFormat=o}"
                        MinWidth="60"
                        IsReadOnly="True"
                        Visibility="Visible"
                        ElementStyle="{StaticResource RightAlign}" />
                        <WPFToolKit:DataGridTextColumn
                        x:Name="TimeMSecColumn"
                        Header="Time MSec"
                        Binding="{Binding TimeStampRelatveMSec, StringFormat={}{0:n3}}"
                        MinWidth="60"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource RightAlign}" />
                        <WPFToolKit:DataGridTextColumn
                        x:Name="ProcessNameColumn"
                        Header="Process Name"
                        Binding="{Binding ProcessName}"
                        MinWidth="60"
                        IsReadOnly="True" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field1"
                        Binding="{Binding DisplayField1, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field2"
                        Binding="{Binding DisplayField2, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field3"
                        Binding="{Binding DisplayField3, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field4"
                        Binding="{Binding DisplayField4, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field5"
                        Binding="{Binding DisplayField5, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field6"
                        Binding="{Binding DisplayField6, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field7"
                        Binding="{Binding DisplayField7, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field8"
                        Binding="{Binding DisplayField8, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field9"
                        Binding="{Binding DisplayField9, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Visibility="Hidden"
                        Header="Field10"
                        Binding="{Binding DisplayField10, Mode=TwoWay}"
                        Width="Auto" />
                        <WPFToolKit:DataGridTextColumn
                        Header="Rest"
                        Binding="{Binding Rest, Mode=TwoWay}"
                        Width="Auto" />
                    </WPFToolKit:DataGrid.Columns>
                </WPFToolKit:DataGrid>
            </Grid>
        </Grid>
    </DockPanel>
</src:WindowBase>
